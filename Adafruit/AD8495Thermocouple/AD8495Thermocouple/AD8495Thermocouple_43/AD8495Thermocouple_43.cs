using GT = Gadgeteer;
using GTM = Gadgeteer.Modules;
using GTI = Gadgeteer.SocketInterfaces;

namespace Gadgeteer.Modules.Adafruit
{
    /// <summary>
    ///     Adafruit AD8495 Thermocouple Amplifier module for Microsoft .NET Gadgeteer
    ///     <para />
    ///     Wiring Connections
    ///     <para />
    ///     OUT -- Gadgeteer Pin 4
    ///     <para />
    ///     GND -- Gadgeteer Pin 10
    ///     <para />
    ///     V+ -- Gadgeteer Pin 1 (3.3V only)
    ///     <para />
    ///     Requires a Gadgeteer 'A' Socket
    /// </summary>
    public class AD8495Thermocouple : Module
    {
        private readonly GTI.AnalogInput _input;
        // Note: A constructor summary is auto-generated by the doc builder.
        /// <summary></summary>
        /// <param name="socketNumber">The socket that this module is plugged in to.</param>
        public AD8495Thermocouple(int socketNumber)
        {
            Offset = 0;
            // This finds the Socket instance from the user-specified socket number.  
            // This will generate user-friendly error messages if the socket is invalid.
            // If there is more than one socket on this module, then instead of "null" for the last parameter, 
            // put text that identifies the socket to the user (e.g. "S" if there is a socket type S)
            var socket = Socket.GetSocket(socketNumber, true, this, null);

            socket.EnsureTypeIsSupported('A', this);

            _input = GTI.AnalogInputFactory.Create(socket, Socket.Pin.Four, this);
        }

        /// <summary>Single point calibration offset in C.</summary>
        public double Offset { get; set; }

        /// <summary>The temperature as measured by the K type thermocouple (range -250°C to 410°C).</summary>
        /// <returns>Temperature in Celsius</returns>
        public double TemperatureCelsius()
        {
            return ((_input.ReadVoltage() - 1.25)/0.005) + Offset;
        }

        /// <summary>The temperature as measured by the K type thermocouple (range -418°F to 770°F).</summary>
        /// <returns>Temperature in Fahrenheit</returns>
        public double TemperatureFahrenheit()
        {
            return (TemperatureCelsius()*9.0/5.0) - 32.0 + Offset;
        }

        /// <summary>The voltage returned from the sensor.</summary>
        /// <returns>The voltage value between 0.0 and 3.3</returns>
        public double ReadVoltage()
        {
            return _input.ReadVoltage();
        }

        /// <summary>The proportion returned from the sensor.</summary>
        /// <returns>The value between 0.0 and 1.0</returns>
        public double ReadProportion()
        {
            return _input.ReadProportion();
        }

    }
}